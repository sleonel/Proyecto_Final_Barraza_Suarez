/**
 * This file contains several constants used in the code and the structure
 * of the message sent by the beacon node. 
 * 
 * @author luis
 * @modified Apr 4, 2014
 */

#ifndef TPSN1_H
#define TPSN1_H


enum {
  
  // The active message type selected here can be any value above 127, as 
  // recommended in the TEP-4 (http://www.tinyos.net/tinyos-2.x/doc/txt/tep4.txt).
  Tpsn1_MSG = 144,   //Beacon's message type 128=0x90
  TPSN1_REPORT_MSG = 147,
  // The timer period in "milliseconds" used to send packets
  // 1 sec = 1024 "ms" 
  TIMER_PERIOD_MILLI_TPSN1 = 3072  // 3 secs = 3*1024 "ms"
};

typedef nx_struct Tpsn1Msg {
  nx_uint16_t nodeId;  // node ID (unique number)
  nx_uint16_t seqNr; // packet's sequence number
} Tpsn1Msg_t;   //the "_t" at the end is a usual convention meaning: "type"


typedef nx_struct Tpsn1_ReportMsg {
  nx_uint16_t nodeId; // node ID of the receiver (this node)
  nx_uint16_t Tpsn2SeqNr; // beacon's sequence number
  nx_uint32_t Tpsn2RadTStamp; // radio time stamp (local radio time) when the 
                          // beacon was received
} Tpsn1_ReportMsg_t;   //the "_t" at the end is a usual convention meaning: "type"


#endif /* TPSN1_H */